AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Demo Appy - SAM hello in python

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
  # Api:
  #   # enable CORS; to make more specific, change the origin wildcard
  #   # to a particular domain name, e.g. "'www.example.com'"
  #   Cors:
  #     AllowMethods: "'*'"
  #     AllowHeaders: "'*'"
  #     AllowOrigin: "'*'"

Resources:
  HelloLambda:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: lambda/
      Handler: hello.lambda_handler
      Runtime: python3.8
      Events:
        Hello:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /hello
            Method: get
            RestApiId: !Ref Api
            # Auth:
            #   ApiKeyRequired: true # switch true or false, by function

  SumLambda:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: lambda/
      Handler: sum.lambda_handler
      Runtime: python3.8
      Events:
        Hello:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /sum
            Method: post
            RestApiId: !Ref Api
            # Auth:
            #   ApiKeyRequired: true # switch true or false, by function

  Api:
    Type: AWS::Serverless::Api
    Properties:
      EndpointConfiguration: EDGE
      StageName: Prod
      DefinitionBody:
        swagger: '2.0'
        info:
          title: MyApp-demo-SAM
          version: 1.0.0
          description: Only a test
        schemes:
        - https
        paths:
          "/hello":
            get:
              operationId: hello
              description: Says "Hello"
              produces:
              - application/json
              responses:
                '200':
                  description: OK
                  schema:
                    $ref: '#/definitions/Empty'
                  headers:
                    Access-Control-Allow-Origin:
                      type: "string"
                default:
                  description: Error
              security:
              - api_key: [] # refers to security definition in this swagger doc
              x-amazon-apigateway-integration:
                uri: !Sub "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/${HelloLambda.Arn}/invocations"
                responses:
                  default:
                    statusCode: "200"
                    responseParameters:
                      method.response.header.Access-Control-Allow-Origin: "'*'"
                httpMethod: POST
                passthroughBehavior: "when_no_match"
                contentHandling: "CONVERT_TO_TEXT"
                type: aws_proxy
            options:
              consumes:
              - "application/json"
              produces:
              - "application/json"
              responses:
                '200':
                  description: "200 response"
                  schema:
                    $ref: "#/definitions/Empty"
                  headers:
                    Access-Control-Allow-Origin:
                      type: "string"
                    Access-Control-Allow-Methods:
                      type: "string"
                    Access-Control-Allow-Headers:
                      type: "string"
              x-amazon-apigateway-integration:
                responses:
                  default:
                    statusCode: "200"
                    responseParameters:
                      method.response.header.Access-Control-Allow-Methods: "'GET,OPTIONS'"
                      method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
                      method.response.header.Access-Control-Allow-Origin: "'*'"
                    responseTemplates:
                      application/json: ""
                requestTemplates:
                  application/json: "{\"statusCode\": 200}"
                passthroughBehavior: "when_no_match"
                type: "mock"
          "/sum":
            post:
              operationId: sum
              description: Sum 2 numbers
              produces:
              - application/json
              responses:
                '200':
                  description: OK
                  schema:
                    $ref: '#/definitions/Empty'
                  headers:
                    Access-Control-Allow-Origin:
                      type: "string"
                default:
                  description: Error
              security:
              - api_key: [] # refers to security definition in this swagger doc
              x-amazon-apigateway-integration:
                uri: !Sub "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/${SumLambda.Arn}/invocations"
                responses:
                  default:
                    statusCode: "200"
                    responseParameters:
                      method.response.header.Access-Control-Allow-Origin: "'*'"
                httpMethod: POST
                passthroughBehavior: "when_no_match"
                contentHandling: "CONVERT_TO_TEXT"
                type: aws_proxy
            options:
              consumes:
              - "application/json"
              produces:
              - "application/json"
              responses:
                '200':
                  description: "200 response"
                  schema:
                    $ref: "#/definitions/Empty"
                  headers:
                    Access-Control-Allow-Origin:
                      type: "string"
                    Access-Control-Allow-Methods:
                      type: "string"
                    Access-Control-Allow-Headers:
                      type: "string"
              x-amazon-apigateway-integration:
                responses:
                  default:
                    statusCode: "200"
                    responseParameters:
                      method.response.header.Access-Control-Allow-Methods: "'GET,OPTIONS'"
                      method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
                      method.response.header.Access-Control-Allow-Origin: "'*'"
                    responseTemplates:
                      application/json: ""
                requestTemplates:
                  application/json: "{\"statusCode\": 200}"
                passthroughBehavior: "when_no_match"
                type: "mock"
        securityDefinitions:
          api_key:
            type: "apiKey"
            name: "x-api-key"
            in: "header"
        definitions:
          Empty:
            type: "object"
            title: "Empty Schema"
      Auth:
        UsagePlan:  
          CreateUsagePlan: SHARED
          Description: Usage plan for this API
          Quota:
            Limit: 500
            Period: MONTH
          Throttle:
            BurstLimit: 100
            RateLimit: 50

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  Api:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub 'curl -H "x-api-key: YOUR_APIKEY_HERE" https://${Api}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/'
  HelloLambda:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt HelloLambda.Arn
  HelloLambdaIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt HelloLambdaRole.Arn
  # ServerlessApiKey:
  #   Description: "API keys"
  #   Value: !Sub "Object ID: ${ServerlessApiKey} --> Find apikey here: https://${AWS::Region}.console.aws.amazon.com/apigateway/home?region=${AWS::Region}#/api-keys"  # I could not ouput API keys directly
  